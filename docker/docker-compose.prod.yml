version: "3.8"

services:
   nginx-proxy:
      restart: always
      image: jwilder/nginx-proxy
      ports:
         - "80:80"
         - "443:443"
      volumes:
         - "/etc/nginx/vhost.d"
         - "/usr/share/nginx/html"
         - "/var/run/docker.sock:/tmp/docker.sock:ro"
         - "/etc/nginx/certs"
      environment:
         - VIRTUAL_HOST=rack.seerden.xyz
         - LETSENCRYPT_HOST=rack.seerden.xyz
         - DEFAULT_HOST=nodeapp.local

   letsencrypt-nginx-proxy-companion:
      restart: always
      image: jrcs/letsencrypt-nginx-proxy-companion
      volumes:
         - "/var/run/docker.sock:/var/run/docker.sock:ro"
      volumes_from:
         - "nginx-proxy"
      environment:
         - VIRTUAL_HOST=rack.seerden.xyz
         - LETSENCRYPT_HOST=rack.seerden.xyz
         - DEFAULT_HOST=nodeapp.local

   store:
      image: redis
      command: ["redis-server", "--appendonly", "yes"]
      volumes:
         - ./redis-data:/data

   database:
      image: postgres:alpine
      environment:
         - POSTGRES_PASSWORD=$PG_PASS
         - POSTGRES_USER=$PG_USER
         - POSTGRES_DB=$PG_DB
      volumes:
         - ./pg-data:/var/lib/postgresql/data
         - ./database-setup:/docker-entrypoint-initdb.d
         - ./database-backup:/psql-backups
      ports:
         - "5432:5432"
      command: ["postgres", "-c", "log_statement=all"]

   server:
      build:
         context: ../server
         dockerfile: Dockerfile.prod
      volumes:
         - ../server:/rack/server
      depends_on:
         - database
         - store
      ports:
         - "5000:5000"

   client:
      build:
         context: ../client
         dockerfile: Dockerfile.prod
      volumes:
         - ../client:/rack/client
         - ../client/node_modules:/rack/client/node_modules
      ports:
         - "3000:3000"

   test-database:
      image: postgres:alpine
      environment:
         - POSTGRES_PASSWORD=$PG_PASS
         - POSTGRES_USER=$PG_USER
         - POSTGRES_DB=$PG_TEST_DB
      volumes:
         - ./pg-data-test:/var/lib/postgresql/data
         - ./database-setup:/docker-entrypoint-initdb.d
         - ./test-database-backup:/psql-backups
      expose:
         - "5434"
      ports:
         - "5434:5434"
      command: ["postgres", "-p 5434", "-c", "log_statement=all"]
